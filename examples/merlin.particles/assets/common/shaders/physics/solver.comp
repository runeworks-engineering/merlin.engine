#version 430

#pragma once
#include "uniforms.comp"
#include "constants.comp"
#include "buffers.comp"
#include "nns.comp"
#include "sph.kernels.comp"
#include "boundary.comp"
#include "pbf.comp"
#include "elasticity.comp"
#include "pbs.comp"
#include "heat.comp"

layout (local_size_x = PTHREAD) in;

uniform uint stage;
void exec(uint index, uint kernel);

// XPBD_Main
void main() {
	uint index = gl_GlobalInvocationID.x;
	if (index >= u_numParticles + u_numEmitter || (stage != 8 && index >= u_numParticles)) return;
	exec(index, stage);
}

void spawnParticle(uint i){
	if (i >= u_numParticles) {
		uint emmiterID = i - u_numParticles;

		b_xi.w = b_pi.w = 1;
		b_xi.xyz = b_pi.xyz = (u_emitterTransform * vec4(ssbo_emitter_positions[emmiterID].xyz,1.0)).xyz;
		b_rho_i = u_rho0;
		b_vi = vec4(0, 0, 0.0, 0);
		b_Ti = 275.15 + 230;

		ssbo_meta[i] = uvec4(MATERIAL_FLUID, getBinIndex(b_xi.xyz), i, i); //phase, binindex, id , sortedID
	}
}



void exec(uint index, uint kernel){
	
	if(index < u_numParticles)
		switch(kernel){
		case STAGE_INIT: 
			
			break;
		case STAGE_SOLVER_STEP_1:
			if(phase(index) == MATERIAL_FLUID)
				pbf_step(index, 0);
			else if(phase(index) == MATERIAL_SOFT){
				pbs_step(index, 0);
				ssbo_density[index] = boundary_computePseudoMass(index);
			}else if(phase(index) >= MATERIAL_BOUNDARY)
				ssbo_density[index] = boundary_computePseudoMass(index);

			if(phase(index) < MATERIAL_BOUNDARY) ssbo_temperature[index] += computeTemperatureDelta(index);

			break;
		case STAGE_SOLVER_STEP_2: 
			if(phase(index) == MATERIAL_FLUID)
				pbf_step(index, 1);
			else if(phase(index) == MATERIAL_SOFT)
				pbs_step(index, 1);
			break;
		case STAGE_SOLVER_STEP_3:
			if(phase(index) == MATERIAL_FLUID)
				pbf_step(index, 2);
			else if(phase(index) == MATERIAL_SOFT)
				pbs_step(index, 2);

			break;
		case STAGE_SOLVER_STEP_4: 
			if(phase(index) == MATERIAL_FLUID)
				pbf_step(index, 3);
			else if(phase(index) == MATERIAL_SOFT)
				pbs_step(index, 3);
		case STAGE_SOLVER_STEP_5: 
			if(phase(index) == MATERIAL_FLUID)
				pbf_step(index, 4);
			break;
		case STAGE_SOLVER_STEP_6: 
			if(phase(index) == MATERIAL_FLUID)
				pbf_step(index, 5);
			//else if(phase(index) == SOLID)
				//pbs_step(index, 3);

			if(phase(index) == MATERIAL_FLUID && ssbo_temperature[index] < 275+80){ 
				phase(index) = MATERIAL_SOFT;
				ssbo_last_position[index] = ssbo_predicted_position[index]; // Fix rest position
			}
			else if(phase(index) == MATERIAL_SOFT && ssbo_temperature[index] > 275+90) phase(index) = MATERIAL_FLUID;

			break;
		}
	else if(kernel == STAGE_SPAWN)
		spawnParticle(index);

}